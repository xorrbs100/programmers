class Solution {
	    public int solution(int bridge_length, int weight, int[] truck_weights) {
	        int answer = 0;
	        int maxWeight=0;
	        
	        Queue<Integer> q = new LinkedList<Integer>();
	        
       
	        for(int truck : truck_weights) {
	        	
	        	while(true) {
	        		if(q.isEmpty()) {		//큐가 비어있을때 truck을 추가
	        			q.offer(truck);
	        			maxWeight += truck;	// 트럭의 무게만큼 증가
	        			answer++;			//시간초 경과			1+
	        			break;
	        		}else if(q.size()== bridge_length) {	//트럭이 다리를 지났을 경우 
	        			maxWeight -=q.poll();			// 큐에서 꺼내 최대무게에서 빼줌
	        			
	        		}else {
	        			if(maxWeight+truck > weight) {		//큐가 비어있지 않고 큐의 무게가 다리의 무게를 초과될때 0을 넣는다
	        				q.offer(0);
	        				answer++;
	        			}else {				//큐가 비어있지 않고 무게가 충분할 때 트럭추가
	        				q.offer(truck);
	        				maxWeight += truck;
	        				answer++;
	        				break;
	        			}
	        		}
	        	}
	        }
	        
	        return answer + bridge_length;
	    }
	}
